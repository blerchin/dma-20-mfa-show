{"version":3,"sources":["BlobField/style.module.css","BlobField/createElasticParticles.js","BlobField/Renderer.js","config.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","getCenterParticles","p","xSum","ySum","i","length","getClosestParticleToPosition","gp","x","y","minDist","closest","x2","y2","a","b","dist","Math","sqrt","getOuterParticles","center","radius","outerParticles","ang","PI","cos","sin","push","line","pointA","pointB","lengthX","lengthY","pow","angle","atan2","controlPoint","current","previous","next","reverse","smoothing","n","o","Renderer","world","svgEl","scale","this","groupLocations","max","particleSystems","drawParticleSystem","particles","groupIndex","smooth","points","map","path","startCP","endCP","el","children","document","createElementNS","appendChild","setAttribute","system","GetPositionBuffer","particleGroups","j","start","GetBufferIndex","end","GetParticleCount","groupParticles","slice","groupCenter","centerPoint","initialPoint","upsertPath","artists","name","b2World","BlobField","useRef","useState","setGroupLocations","useEffect","window","joints","DestroyJoint","bodies","DestroyBody","DestroyParticleSystem","resetWorld","numBlobs","width","height","bd","ground","CreateBody","w","h","shape1","vertices","CreateFixtureFromShape","shape2","shape3","shape4","psd","particleSystem","CreateParticleSystem","circle","position","Set","floor","pgd","flags","groupFlags","shape","color","random","CreateParticleGroup","type","body","createElasticParticles","config","renderer","draw","setInterval","Step","getGroupLocations","ref","style","transform","key","className","artistNameTag","artistName","toUpperCase","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82a15217.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"artistName\":\"style_artistName__12EFZ\",\"artistNameTag\":\"style_artistNameTag__cy5sA\"};","const { \n    b2BodyDef,\n    b2CircleShape,\n    b2ParticleGroupDef,\n    b2ParticleSystemDef,\n    b2PolygonShape,\n    b2Vec2,\n    b2_springParticle,\n    b2_solidParticleGroup,\n    b2_dynamicBody\n} = liquidfun;\n\nexport default function createElasticParticles({ world, numBlobs = 11, width=800, height=600, scale=10}) {\n    var bd = new b2BodyDef();\n    var ground = world.CreateBody(bd);\n\n    const w = width/scale;\n    const h = height/scale\n\n    //set boundary box\n    const shape1 = new b2PolygonShape();\n    shape1.vertices.push(new b2Vec2(0, -1));\n    shape1.vertices.push(new b2Vec2(w, -1));\n    shape1.vertices.push(new b2Vec2(w, 0));\n    shape1.vertices.push(new b2Vec2(0, 0));\n    ground.CreateFixtureFromShape(shape1, 0);\n  \n    const shape2 = new b2PolygonShape();\n    shape2.vertices.push(new b2Vec2(-1, -1));\n    shape2.vertices.push(new b2Vec2(0, -1));\n    shape2.vertices.push(new b2Vec2(0, h));\n    shape2.vertices.push(new b2Vec2(-1, h));\n    ground.CreateFixtureFromShape(shape2, 0);\n  \n    const shape3 = new b2PolygonShape();\n    shape3.vertices.push(new b2Vec2(w + 1, -1));\n    shape3.vertices.push(new b2Vec2(w + 1, h + 1));\n    shape3.vertices.push(new b2Vec2(w, h + 1));\n    shape3.vertices.push(new b2Vec2(w, -1));\n    ground.CreateFixtureFromShape(shape3, 0);\n    \n    const shape4 = new b2PolygonShape();\n    shape4.vertices.push(new b2Vec2(-1, h));\n    shape4.vertices.push(new b2Vec2(w + 1, h));\n    shape4.vertices.push(new b2Vec2(w, h + 1));\n    shape4.vertices.push(new b2Vec2(-1, h + 1));\n    ground.CreateFixtureFromShape(shape4, 0);\n  \n    const psd = new b2ParticleSystemDef();\n    psd.radius = 0.2;\n    const particleSystem = world.CreateParticleSystem(psd);\n  \n    for(let i = 0; i < numBlobs; i++) {\n        const circle = new b2CircleShape();\n        circle.position.Set( Math.floor(i / 4) * 10 + 10, (i % 4) *6 + 5);\n        circle.radius = 3;\n        const pgd = new b2ParticleGroupDef();\n        pgd.flags = b2_springParticle;\n        pgd.groupFlags = b2_solidParticleGroup;\n        pgd.shape = circle;\n        pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\n        particleSystem.CreateParticleGroup(pgd);\n    }\n  \n    // circle\n    bd = new b2BodyDef();\n    const circle = new b2CircleShape();\n    bd.type = b2_dynamicBody;\n    const body = world.CreateBody(bd);\n    circle.position.Set(0, 8);\n    circle.radius = 0.5;\n    body.CreateFixtureFromShape(circle, 0.5);\n  }","function getCenterParticles(p) {\n  var xSum = 0;\n  var ySum = 0;\n\n  for(var i = 0; i < p.length; i += 2) {\n    xSum += p[i];\n    ySum += p[i+1];\n  }\n\n  return [xSum/(p.length/2), ySum/(p.length/2)];\n}\n\nfunction getClosestParticleToPosition(gp, x, y) {\n    var minDist = -1;\n    var closest = [0,0];\n\n    for(var i = 0; i < gp.length; i+=2) {\n      var x2 = gp[i];\n      var y2 = gp[i+1];\n      var a = x - x2;\n      var b = y - y2;\n      var dist = Math.sqrt(a*a + b*b);\n\n      if(minDist == -1 || dist < minDist) {\n        minDist = dist;\n        closest = [x2,y2]\n      }\n    }\n\n    return closest;\n}\n\nfunction getOuterParticles(gp, center, radius) {\n  const outerParticles = [];\n  var numOuterParticles = 20;\n\n  for(var i = 0; i < numOuterParticles; i++) {\n    var ang = (i / numOuterParticles) * (Math.PI * 2);\n    var x = Math.cos(ang) * radius + center[0];\n    var y = Math.sin(ang) * radius + center[1];\n\n    outerParticles.push(getClosestParticleToPosition(gp, x, y));\n  }\n\n  return outerParticles;\n}\n\nfunction line(pointA, pointB) {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nfunction controlPoint (current, previous, next, reverse, smoothing = 0.1) {\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n  // Properties of the opposed-line\n  const o = line(p, n)\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[1] + Math.sin(angle) * length\n  return [x, y]\n}\n\nexport default class Renderer {\n  constructor(world, svgEl, { scale = 10} = {}) {\n      // init large buffer geometry\n      this.world = world;\n      this.svgEl = svgEl;\n      this.scale = scale;\n      this.groupLocations = []\n  }\n\n  draw() {\n    // draw particle systems\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\n        this.drawParticleSystem(this.world.particleSystems[i]);\n    }\n  }\n\n  getGroupLocations() {\n    return this.groupLocations;\n  }\n\n\n  upsertPath(particles, groupIndex, smooth = true) {\n    const points = particles.map((p) => [p[0] * this.scale, p[1] * this.scale]);\n    let path = `M ${points[0][0]} ${points[0][1]} `;\n    for(var i = 1; i < particles.length; i++) {\n      if (smooth) {\n        const startCP = controlPoint(points[i - 1], points[i - 2], points[i]);\n        const endCP = controlPoint(points[i], points[i - 1],  points[i + 1], true);\n        path += `C ${startCP[0]},${startCP[1]} ${endCP[0]}, ${endCP[1]}, ${points[i][0]} ${points[i][1]}`;\n      } else {\n        path += `L ${points[i][0]} ${points[i][1]} `;\n      }\n    }\n    path += 'z';\n    \n    let el = this.svgEl.children[groupIndex];\n    if (typeof el == 'undefined') {\n      el = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n      this.svgEl.appendChild(el);\n    }\n    el.setAttribute('d', path);\n    el.setAttribute('stroke', 'black');\n    el.setAttribute('fill', 'transparent');\n  }\n\n  drawParticleSystem(system) {\n    const particles = system.GetPositionBuffer();\n    const particleGroups = system.particleGroups;\n    //need to reset this on each step so React knows to rerender\n    this.groupLocations = [];\n\n    // loop through particle groups \n    // calculate center of group\n    // get list of outmost particles from center of group \n    // draw a line connecting them\n    \n    for(var j = 0; j < particleGroups.length; j++) {\n      var bufferIndex = particleGroups[j].GetBufferIndex();\n      var numParticles = particleGroups[j].GetParticleCount();\n\n      // * 2 to account for x and y values in position buffer\n      var start = bufferIndex * 2;\n      var end = start + numParticles * 2;\n      var groupParticles = particles.slice(start, end);\n\n      var groupCenter = getCenterParticles(groupParticles);\n\n      var outerParticles = getOuterParticles(groupParticles, groupCenter, 5);\n\n      this.groupLocations[j] = { \n        centerPoint: [groupCenter[0] * this.scale, groupCenter[1] * this.scale], \n        initialPoint: [groupParticles[0] * this.scale, groupParticles[1] * this.scale]\n      };\n\n      this.upsertPath(outerParticles, j);\n    }\n  }\n}\n","export default {\n    artists: [\n        {\n            name: 'Zeynep Abes'\n        }, {\n            name: 'Graham Akins'\n        }, {\n            name: 'Berfin Ataman'\n        }, {\n            name: 'Erin Cooney'\n        }, {\n            name: 'Clara Leivas'\n        }, {\n            name: 'Ben Lerchin'\n        }, {\n            name: \"Blaine O'Neill\"\n        }, {\n            name: 'Miles Peyton'\n        }, {\n            name: 'Hirad Sab'\n        }, {\n            name: 'Dalena Tran'\n        }, {\n            name: 'Leming Z/C'\n        }\n        \n    ]\n}","import React, { useRef, useState, useEffect } from 'react';\nimport createElasticParticles from './createElasticParticles';\nimport Renderer from './Renderer';\nimport config from 'src/config';\n\nimport { artistName, artistNameTag } from './style.module.css';\n\nconst { b2Vec2, b2World } = liquidfun; \n\nconst resetWorld = (world) => {\n    if (world !== null) {\n        while (world.joints.length > 0) {\n          world.DestroyJoint(world.joints[0]);\n        }\n    \n        while (world.bodies.length > 0) {\n          world.DestroyBody(world.bodies[0]);\n        }\n    \n        while (world.particleSystems.length > 0) {\n          world.DestroyParticleSystem(world.particleSystems[0]);\n        }\n      }\n}\n\nexport default function BlobField({ scale = 20}) {\n    const svgEl = useRef(null); \n    const [groupLocations, setGroupLocations] = useState([]);\n\n    useEffect(() => {\n        const world = new b2World(new b2Vec2(0, 5));\n        window.world = world;\n        resetWorld(world);\n        createElasticParticles({ world, scale, numBlobs: config.artists.length });\n        const renderer = new Renderer(world, svgEl.current, { scale });\n        renderer.draw();\n        window.setInterval(() => {\n          world.Step(1.0 / 60.0, 5, 3);\n          renderer.draw();\n          setGroupLocations(renderer.getGroupLocations());\n        }, 1000/60);\n    }, [scale]);\n\n    return (\n        <div>\n          <svg width={800} height={600}>\n            <g ref={svgEl} style={{ transform: 'scale(1)' }}/>\n            {groupLocations.map(({ initialPoint }, i) => (\n              <g key={`artist-${i}`}>\n                <rect className={artistNameTag} x={initialPoint[0]} y={initialPoint[1]} width={120} height={20}></rect>\n                <text className={artistName} x={initialPoint[0]} y={initialPoint[1]+16} width={120}>\n                    {config.artists[i].name.toUpperCase()}\n                </text>\n              </g>\n             ))}\n          </svg>\n        </div>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport BlobField from 'src/BlobField';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BlobField />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}