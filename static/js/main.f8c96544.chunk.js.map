{"version":3,"sources":["BlobField/createElasticParticles.js","BlobField/Renderer.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","getCenterParticles","p","xSum","ySum","i","length","getClosestParticleToPosition","gp","x","y","minDist","closest","x2","y2","a","b","dist","Math","sqrt","getOuterParticles","center","radius","outerParticles","ang","PI","cos","sin","push","Renderer","world","svgEl","scale","this","maxVertices","positions","colors","currentVertex","max","particleSystems","drawParticleSystem","x1","y1","r","g","line","document","createElementNS","setAttribute","appendChild","particles","index","path","el","children","system","GetPositionBuffer","particleGroups","j","start","GetBufferIndex","end","GetParticleCount","groupParticles","slice","upsertPath","b2World","BlobField","useRef","useEffect","window","joints","DestroyJoint","bodies","DestroyBody","DestroyParticleSystem","resetWorld","numBlobs","width","height","bd","ground","CreateBody","w","h","shape1","vertices","CreateFixtureFromShape","shape2","shape3","shape4","psd","particleSystem","CreateParticleSystem","circle","position","Set","floor","pgd","flags","groupFlags","shape","color","random","CreateParticleGroup","type","body","createElasticParticles","renderer","current","draw","setInterval","Step","ref","style","transform","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f8c96544.chunk.js","sourcesContent":["const { \n    b2BodyDef,\n    b2CircleShape,\n    b2ParticleGroupDef,\n    b2ParticleSystemDef,\n    b2PolygonShape,\n    b2Vec2,\n    b2_springParticle,\n    b2_solidParticleGroup,\n    b2_dynamicBody\n} = liquidfun;\n\nexport default function createElasticParticles({ world, numBlobs = 11, width=800, height=600, scale=10}) {\n    var bd = new b2BodyDef();\n    var ground = world.CreateBody(bd);\n\n    window.world = world; //fuckkkkkkkk me\n\n    const w = width/scale;\n    const h = height/scale\n  \n    const shape1 = new b2PolygonShape();\n    shape1.vertices.push(new b2Vec2(0, -1));\n    shape1.vertices.push(new b2Vec2(w, -1));\n    shape1.vertices.push(new b2Vec2(w, 0));\n    shape1.vertices.push(new b2Vec2(0, 0));\n    ground.CreateFixtureFromShape(shape1, 0);\n  \n    const shape2 = new b2PolygonShape();\n    shape2.vertices.push(new b2Vec2(-1, -1));\n    shape2.vertices.push(new b2Vec2(0, -1));\n    shape2.vertices.push(new b2Vec2(0, h));\n    shape2.vertices.push(new b2Vec2(-1, h));\n    ground.CreateFixtureFromShape(shape2, 0);\n  \n    const shape3 = new b2PolygonShape();\n    shape3.vertices.push(new b2Vec2(w + 1, -1));\n    shape3.vertices.push(new b2Vec2(w + 1, h + 1));\n    shape3.vertices.push(new b2Vec2(w, h + 1));\n    shape3.vertices.push(new b2Vec2(w, -1));\n    ground.CreateFixtureFromShape(shape3, 0);\n    \n    const shape4 = new b2PolygonShape();\n    shape4.vertices.push(new b2Vec2(-1, h));\n    shape4.vertices.push(new b2Vec2(w + 1, h));\n    shape4.vertices.push(new b2Vec2(w, h + 1));\n    shape4.vertices.push(new b2Vec2(-1, h + 1));\n    ground.CreateFixtureFromShape(shape4, 0);\n  \n    const psd = new b2ParticleSystemDef();\n    psd.radius = 0.1;\n    const particleSystem = world.CreateParticleSystem(psd);\n  \n    for(let i = 0; i < numBlobs; i++) {\n        const circle = new b2CircleShape();\n        circle.position.Set( Math.floor(i / 4) * 10 + 10, (i % 4) *6 + 5);\n        circle.radius = 4;\n        const pgd = new b2ParticleGroupDef();\n        pgd.flags = b2_springParticle;\n        pgd.groupFlags = b2_solidParticleGroup;\n        pgd.shape = circle;\n        pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\n        particleSystem.CreateParticleGroup(pgd);\n    }\n  \n    // circle\n    bd = new b2BodyDef();\n    const circle = new b2CircleShape();\n    bd.type = b2_dynamicBody;\n    const body = world.CreateBody(bd);\n    circle.position.Set(0, 8);\n    circle.radius = 0.5;\n    body.CreateFixtureFromShape(circle, 0.5);\n  }","function getCenterParticles(p) {\n  var xSum = 0;\n  var ySum = 0;\n\n  for(var i = 0; i < p.length; i += 2) {\n    xSum += p[i];\n    ySum += p[i+1];\n  }\n\n  return [xSum/(p.length/2), ySum/(p.length/2)];\n}\n\nfunction getClosestParticleToPosition(gp, x, y) {\n    var minDist = -1;\n    var closest = [0,0];\n\n    for(var i = 0; i < gp.length; i+=2) {\n      var x2 = gp[i];\n      var y2 = gp[i+1];\n      var a = x - x2;\n      var b = y - y2;\n      var dist = Math.sqrt(a*a + b*b);\n\n      if(minDist == -1 || dist < minDist) {\n        minDist = dist;\n        closest = [x2,y2]\n      }\n    }\n\n    return closest;\n}\n\nfunction getOuterParticles(gp, center, radius) {\n  const outerParticles = [];\n  var numOuterParticles = 30;\n\n  for(var i = 0; i < numOuterParticles; i++) {\n    var ang = (i / numOuterParticles) * (Math.PI * 2);\n    var x = Math.cos(ang) * radius + center[0];\n    var y = Math.sin(ang) * radius + center[1];\n\n    outerParticles.push(getClosestParticleToPosition(gp, x, y));\n  }\n\n  return outerParticles;\n}\n\nexport default class Renderer {\n  constructor(world, svgEl, { scale = 10} = {}) {\n      // init large buffer geometry\n      this.maxVertices = 31000;\n      this.world = world;\n      this.positions = [];\n      this.colors = [];\n      this.currentVertex = 0;\n      this.svgEl = svgEl;\n      this.scale = scale;\n  }\n\n  draw() {\n    // draw particle systems\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\n        this.drawParticleSystem(this.world.particleSystems[i]);\n    }\n  }\n\n  insertLine(x1, y1, x2, y2, r, g, b) {\n    const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n    line.setAttribute('x1', x1 * this.scale);\n    line.setAttribute('y1', y1 * this.scale);\n    line.setAttribute('x2', x2 * this.scale);\n    line.setAttribute('y2', y2 * this.scale);\n    line.setAttribute('stroke', 'black');\n    line.setAttribute('fill', 'transparent');\n    this.svgEl.appendChild(line);\n  }\n\n  upsertPath(particles, index) {\n    let path = `M ${particles[0][0] * this.scale} ${particles[0][1] * this.scale} `;\n\n    for(var i = 1; i < particles.length; i++) {\n      path += `L ${particles[i][0] * this.scale} ${particles[i][1] * this.scale} `;\n    }\n    path += 'z';\n    \n    let el = this.svgEl.children[index];\n    if (typeof el == 'undefined') {\n      el = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n      this.svgEl.appendChild(el);\n    }\n    el.setAttribute('d', path);\n    el.setAttribute('stroke', 'black');\n    el.setAttribute('fill', 'transparent');\n  }\n  \n  drawParticleSystem(system) {\n    var particles = system.GetPositionBuffer();\n    var particleGroups = system.particleGroups;\n\n    // loop through particle groups \n    // calculate center of group\n    // get list of outmost particles from center of group \n    // draw a line connecting them\n    for(var j = 0; j < particleGroups.length; j++) {\n      var bufferIndex = particleGroups[j].GetBufferIndex();\n      var numParticles = particleGroups[j].GetParticleCount();\n\n      // * 2 to account for x and y values in position buffer\n      var start = bufferIndex * 2;\n      var end = start + numParticles * 2;\n      var groupParticles = particles.slice(start, end);\n\n      var groupCenter = getCenterParticles(groupParticles);\n\n      var outerParticles = getOuterParticles(groupParticles, groupCenter, 5);\n\n      this.upsertPath(outerParticles, j);\n    }\n  }\n}\n","import React, { useRef, useEffect } from 'react';\nimport createElasticParticles from './createElasticParticles';\nimport Renderer from './Renderer';\nimport { render } from 'react-dom';\n\nconst { b2Vec2, b2World } = liquidfun; \n\nconst resetWorld = (world) => {\n    if (world !== null) {\n        while (world.joints.length > 0) {\n          world.DestroyJoint(world.joints[0]);\n        }\n    \n        while (world.bodies.length > 0) {\n          world.DestroyBody(world.bodies[0]);\n        }\n    \n        while (world.particleSystems.length > 0) {\n          world.DestroyParticleSystem(world.particleSystems[0]);\n        }\n      }\n}\n\nexport default function BlobField({ scale = 20}) {\n    const svgEl = useRef(null); \n\n    useEffect(() => {\n        const world = new b2World(new b2Vec2(0, 5));\n        window.world = world;\n        resetWorld(world);\n        createElasticParticles({ world, scale });\n        const renderer = new Renderer(world, svgEl.current, { scale });\n        renderer.draw();\n        window.setInterval(() => {\n          world.Step(1.0 / 30.0, 5, 3);\n          renderer.draw();\n        }, 1000/60);\n    }, []);\n\n    return (\n        <div>\n          <svg width={800} height={600}>\n            <g ref={svgEl} style={{ transform: 'scale(1)' }}/>\n          </svg>\n        </div>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport BlobField from 'src/BlobField';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BlobField />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}