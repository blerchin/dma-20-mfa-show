{"version":3,"sources":["BlobField/style.module.scss","BlobField/particles.js","BlobField/metaball.js","BlobField/Renderer.js","config.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","metaball","ctx","radius","center1","center2","u1","u2","handleSize","v","radius1","radius2","HALF_PI","Math","PI","d","dist","maxDist","abs","acos","angleBetweenCenters","angle","maxSpread","angle1","angle2","angle3","angle4","p1","getVector","p2","p3","p4","totalRadius","d2Base","min","d2","r1","r2","h1","h2","h3","h4","metaballToPath","escaped","r","moveTo","bezierCurveTo","lineTo","x1","y1","x2","y2","atan2","a","cx","cy","cos","sin","getCenterParticles","p","xSum","ySum","i","length","getClosestParticleToPosition","gp","x","y","minDist","closest","b","sqrt","getOuterParticles","center","outerParticles","ang","push","Renderer","world","canvasEl","scale","this","getContext","groupLocations","fillStyle","fillRect","width","height","max","particleSystems","drawParticleSystem","particles","groupIndex","points","map","beginPath","strokeWidth","strokeStyle","arc","fill","system","GetPositionBuffer","particleGroups","j","start","GetBufferIndex","end","GetParticleCount","groupParticles","slice","groupCenter","centerPoint","initialPoint","upsertPath","artists","name","b2AABB","b2MouseJointDef","b2World","BlobField","window","innerHeight","positionIterations","velocityIterations","gravity","initialScale","innerWidth","particleRadius","animationEl","useRef","wrapperEl","svgEl","useState","setGroupLocations","config","useEffect","joints","DestroyJoint","bodies","DestroyBody","DestroyParticleSystem","resetWorld","gd","groundBody","CreateBody","bd","ground","w","h","shape1","vertices","CreateFixtureFromShape","shape2","shape3","shape4","createBounds","particleSystem","psd","CreateParticleSystem","createParticleSystem","cursor","initialPosition","circle","type","body","position","Set","createCursor","md","bodyA","bodyB","maxForce","GetMass","mouseJoint","CreateJoint","SetAwake","renderer","current","shouldRender","blobsToCreate","render","pgd","flags","groupFlags","shape","color","random","CreateParticleGroup","createBlob","Step","requestAnimationFrame","draw","getGroupLocations","addEventListener","evt","coords","offsetX","offsetY","SetTarget","handleMouseMove","className","wrapper","ref","style","id","offset","stopColor","key","artistNameTag","artistName","toUpperCase","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.510ab343.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"artistName\":\"style_artistName__3T0Oq\",\"artistNameTag\":\"style_artistNameTag__1TD4C\",\"blob\":\"style_blob__1cFrO\",\"cursor\":\"style_cursor__1z_IY\",\"wrapper\":\"style_wrapper__2_6lD\"};","\nconst { \n    b2BodyDef,\n    b2CircleShape,\n    b2ParticleGroupDef,\n    b2ParticleSystemDef,\n    b2PolygonShape,\n    b2Vec2,\n    b2_springParticle,\n    b2_solidParticleGroup,\n    b2_dynamicBody\n} = liquidfun;\n\n\nexport function createBounds({ world, width=800, height=600, scale=10}) {\n    var bd = new b2BodyDef();\n    var ground = world.CreateBody(bd);\n\n    const w = width/scale;\n    const h = height/scale\n\n    //set boundary box\n    const shape1 = new b2PolygonShape();\n    shape1.vertices.push(new b2Vec2(0, -1));\n    shape1.vertices.push(new b2Vec2(w, -1));\n    shape1.vertices.push(new b2Vec2(w, 0));\n    shape1.vertices.push(new b2Vec2(0, 0));\n    ground.CreateFixtureFromShape(shape1, 0);\n  \n    const shape2 = new b2PolygonShape();\n    shape2.vertices.push(new b2Vec2(-1, -1));\n    shape2.vertices.push(new b2Vec2(0, -1));\n    shape2.vertices.push(new b2Vec2(0, h));\n    shape2.vertices.push(new b2Vec2(-1, h));\n    ground.CreateFixtureFromShape(shape2, 0);\n  \n    const shape3 = new b2PolygonShape();\n    shape3.vertices.push(new b2Vec2(w + 1, -1));\n    shape3.vertices.push(new b2Vec2(w + 1, h + 1));\n    shape3.vertices.push(new b2Vec2(w, h + 1));\n    shape3.vertices.push(new b2Vec2(w, -1));\n    ground.CreateFixtureFromShape(shape3, 0);\n    \n    const shape4 = new b2PolygonShape();\n    shape4.vertices.push(new b2Vec2(-1, h - 2));\n    shape4.vertices.push(new b2Vec2(w + 1, h - 2));\n    shape4.vertices.push(new b2Vec2(w, h - 1 ));\n    shape4.vertices.push(new b2Vec2(-1, h - 1));\n    ground.CreateFixtureFromShape(shape4, 0);\n}\n\nexport function createParticleSystem(world, radius = 0.3) {\n    const psd = new b2ParticleSystemDef();\n    psd.radius = radius;\n    return world.CreateParticleSystem(psd);\n};\n\nexport function createBlob({ particleSystem, radius = 3, width, scale = 10 }) {\n    const circle = new b2CircleShape();\n    circle.position.Set( width / scale / 2, radius);\n    circle.radius = radius;\n    const pgd = new b2ParticleGroupDef();\n    pgd.flags = b2_springParticle;\n    pgd.groupFlags = b2_solidParticleGroup;\n    pgd.shape = circle;\n    pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\n    particleSystem.CreateParticleGroup(pgd);\n}\n\nexport function createCursor(world, { initialPosition = [1, 1], radius = 1 } = {}) {\n    const bd = new b2BodyDef();\n    const circle = new b2CircleShape();\n    bd.type = b2_dynamicBody;\n    const body = world.CreateBody(bd);\n    circle.position.Set(...initialPosition);\n    circle.radius = radius;\n    body.CreateFixtureFromShape(circle, 3);\n    return body;\n}","import React, { useEffect, useRef } from 'react';\n\n/**\n * Big round of applause for Varun Vachhar\n * http://varun.ca/metaballs\n * Based on Metaball script by Hiroyuki Sato\n * http://shspage.com/aijs/en/#metaball\n */\n\n\nexport default function metaball(ctx, radius, center1, center2, handleSize = 2.4, v = 0.5) {\n    const radius1 = radius;\n    const radius2 = radius;\n    const HALF_PI = Math.PI / 2;\n    const d = dist(center1, center2);\n    //const maxDist = radius1 + radius2 * 2.5;\n    const maxDist = 400;\n    let u1, u2;\n  \n    if (radius1 === 0 || radius2 === 0 || d > maxDist || d <= Math.abs(radius1 - radius2)) {\n      return '';\n    }\n  \n    if (d < radius1 + radius2) {\n      u1 = Math.acos(\n        (radius1 * radius1 + d * d - radius2 * radius2) / (2 * radius1 * d),\n      );\n      u2 = Math.acos(\n        (radius2 * radius2 + d * d - radius1 * radius1) / (2 * radius2 * d),\n      );\n    } else {\n      u1 = 0;\n      u2 = 0;\n    }\n  \n    // All the angles\n    const angleBetweenCenters = angle(center2, center1);\n    const maxSpread = Math.acos((radius1 - radius2) / d);\n  \n    const angle1 = angleBetweenCenters + u1 + (maxSpread - u1) * v;\n    const angle2 = angleBetweenCenters - u1 - (maxSpread - u1) * v;\n    const angle3 = angleBetweenCenters + Math.PI - u2 - (Math.PI - u2 - maxSpread) * v;\n    const angle4 = angleBetweenCenters - Math.PI + u2 + (Math.PI - u2 - maxSpread) * v;\n    // Points\n    const p1 = getVector(center1, angle1, radius1);\n    const p2 = getVector(center1, angle2, radius1);\n    const p3 = getVector(center2, angle3, radius2);\n    const p4 = getVector(center2, angle4, radius2);\n  \n    // Define handle length by the\n    // distance between both ends of the curve\n    const totalRadius = radius1 + radius2;\n    const d2Base = Math.min(v * handleSize, dist(p1, p3) / totalRadius);\n  \n    // Take into account when circles are overlapping\n    const d2 = d2Base * Math.min(1, d * 2 / (radius1 + radius2));\n  \n    const r1 = radius1 * d2;\n    const r2 = radius2 * d2;\n  \n    const h1 = getVector(p1, angle1 - HALF_PI, r1);\n    const h2 = getVector(p2, angle2 + HALF_PI, r1);\n    const h3 = getVector(p3, angle3 + HALF_PI, r2);\n    const h4 = getVector(p4, angle4 - HALF_PI, r2);\n  \n    return metaballToPath(ctx,\n      p1, p2, p3, p4,\n      h1, h2, h3, h4,\n      d > radius1,\n      radius2,\n    );\n  }\n  \n  function metaballToPath(ctx, p1, p2, p3, p4, h1, h2, h3, h4, escaped, r) {\n    ctx.moveTo(...p1);\n    ctx.bezierCurveTo(...h1, ...h3, ...p3);\n    ctx.lineTo(...p4);\n    ctx.bezierCurveTo(...h4, ...h2, ...p2);\n    /*\n    return [\n      'M', p1,\n      'C', h1, h3, p3,\n      'A', r, r, 0, escaped ? 1 : 0, 0, p4,\n      'C', h4, h2, p2,\n    ].join(' ');\n    */\n  }\n  \n  \n  function dist([x1, y1], [x2, y2]) {\n    return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5;\n  }\n  \n  function angle([x1, y1], [x2, y2]) {\n    return Math.atan2(y1 - y2, x1 - x2);\n  }\n  \n  function getVector([cx, cy], a, r) {\n    return [cx + r * Math.cos(a), cy + r * Math.sin(a)];\n  }\n  \nexport function Test() {\n    //this is just a react component for testing the metaball code\n    const metaBall = useRef(null);\n    useEffect(() => {\n        const ctx = metaBall.current.getContext('2d');\n        ctx.fillStyle = 'black';\n        const radius = 80;\n        const ctr1 = [100, 100];\n        ctx.beginPath();\n        ctx.arc(...ctr1, radius, 0, Math.PI * 2);\n        ctx.fill();\n        const ctr2 = [350, 100];\n        ctx.beginPath();\n        ctx.arc(...ctr2, radius, 0, Math.PI * 2);\n        ctx.fill();\n        const ctr3 = [250, 300];\n        ctx.arc(...ctr3, radius, 0, Math.PI * 2);\n        ctx.fill();\n\n        ctx.fillStyle='white';\n        ctx.beginPath();\n        metaball(ctx, radius, ctr1, ctr2, 1.3, .6);\n        metaball(ctx, radius, ctr2, ctr3, 1.3);\n        metaball(ctx, radius, ctr3, ctr1, 1.3);\n        ctx.fill();\n    });\n    \n    return (\n        <canvas ref={metaBall}  width={800} height={800} />\n    );\n}","import { blob, cursor as cursorClass } from './style.module.scss';\nimport metaball from './metaball';\n\nfunction getCenterParticles(p) {\n  var xSum = 0;\n  var ySum = 0;\n\n  for(var i = 0; i < p.length; i += 2) {\n    xSum += p[i];\n    ySum += p[i+1];\n  }\n\n  return [xSum/(p.length/2), ySum/(p.length/2)];\n}\n\nfunction getClosestParticleToPosition(gp, x, y) {\n    var minDist = -1;\n    var closest = [0,0];\n\n    for(var i = 0; i < gp.length; i+=2) {\n      var x2 = gp[i];\n      var y2 = gp[i+1];\n      var a = x - x2;\n      var b = y - y2;\n      var dist = Math.sqrt(a*a + b*b);\n\n      if(minDist === -1 || dist < minDist) {\n        minDist = dist;\n        closest = [x2,y2]\n      }\n    }\n\n    return closest;\n}\n\nfunction getOuterParticles(gp, center, radius) {\n  const outerParticles = [];\n  var numOuterParticles = 10;\n\n  for(var i = 0; i < numOuterParticles; i++) {\n    var ang = (i / numOuterParticles) * (Math.PI * 2);\n    var x = Math.cos(ang) * radius + center[0];\n    var y = Math.sin(ang) * radius + center[1];\n\n    outerParticles.push(getClosestParticleToPosition(gp, x, y));\n  }\n\n  return outerParticles;\n}\n\nfunction line(pointA, pointB) {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nfunction controlPoint (current, previous, next, reverse, smoothing = 0.2) {\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n  // Properties of the opposed-line\n  const o = line(p, n)\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[1] + Math.sin(angle) * length\n  return [x, y]\n}\n\nexport default class Renderer {\n  constructor(world, canvasEl, { radius = .25, scale = 10} = {}) {\n      // init large buffer geometry\n      this.world = world;\n      this.canvasEl = canvasEl;\n      this.ctx = canvasEl.getContext('2d');\n      this.scale = scale;\n      this.radius = radius;\n      this.groupLocations = []\n  }\n\n  draw() {\n    this.ctx.fillStyle = '#389e6b';\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n\n    // draw particle systems\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\n        this.drawParticleSystem(this.world.particleSystems[i]);\n    }\n  }\n\n  getGroupLocations() {\n    return this.groupLocations;\n  }\n\n\n  upsertPath(particles, groupIndex, smooth=true) {\n    const points = particles.map((p) => [p[0] * this.scale, p[1] * this.scale]);\n    const ctx = this.ctx;\n    ctx.beginPath();\n    ctx.strokeWidth = 1;\n    ctx.strokeStyle='black';\n    ctx.fillStyle = 'black';\n    //start by drawing all the particles\n    for(var i = 0; i < points.length; i++) {\n      ctx.beginPath();\n      ctx.arc(points[i][0], points[i][1], this.radius * this.scale, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n    //then make metaballs of each pair of points\n    ctx.beginPath();\n    metaball(ctx, this.radius * this.scale, points[0], points[points.length - 1], 2);\n    ctx.fill();\n    for(var i = 0; i < points.length - 1; i++) {\n      ctx.beginPath();\n      metaball(ctx, this.radius * this.scale, points[i], points[i + 1], 2);\n      ctx.fill();\n    }\n    //finally draw crude outline and fill it\n    /*\n    ctx.beginPath();\n    ctx.moveTo(points[0][0], points[0][1]);\n    for(var i = 1; i < points.length; i++) {\n       this.ctx.lineTo(points[i][0], points[i][1]);\n    }\n    ctx.closePath();\n    ctx.fill();\n    */\n  }\n\n  drawParticleSystem(system) {\n    const particles = system.GetPositionBuffer();\n    const particleGroups = system.particleGroups;\n    //need to reset this on each step so React knows to rerender\n    this.groupLocations = [];\n\n    // loop through particle groups \n    // calculate center of group\n    // get list of outmost particles from center of group \n    // draw a line connecting them\n    \n    for(var j = 0; j < particleGroups.length; j++) {\n      var bufferIndex = particleGroups[j].GetBufferIndex();\n      var numParticles = particleGroups[j].GetParticleCount();\n\n      // * 2 to account for x and y values in position buffer\n      var start = bufferIndex * 2;\n      var end = start + numParticles * 2;\n      var groupParticles = particles.slice(start, end);\n\n      var groupCenter = getCenterParticles(groupParticles);\n\n      var outerParticles = getOuterParticles(groupParticles, groupCenter, 5);\n\n      this.groupLocations[j] = { \n        centerPoint: [groupCenter[0] * this.scale, groupCenter[1] * this.scale], \n        initialPoint: [groupParticles[0] * this.scale, groupParticles[1] * this.scale]\n      };\n\n      this.upsertPath(outerParticles, j);\n    }\n  }\n}\n","export default {\n    artists: [\n        {\n            name: 'Zeynep Abes'\n        }, {\n            name: 'Graham Akins'\n        }, {\n            name: 'Berfin Ataman'\n        }, {\n            name: 'Erin Cooney'\n        }, {\n            name: 'Clara Leivas'\n        }, {\n            name: 'Ben Lerchin'\n        }, {\n            name: \"Blaine O'Neill\"\n        }, {\n            name: 'Miles Peyton'\n        }, {\n            name: 'Hirad Sab'\n        }, {\n            name: 'Dalena Tran'\n        }, {\n            name: 'Leming Z/C'\n        }\n        \n    ]\n}","import React, { useRef, useState, useEffect } from 'react';\nimport { createParticleSystem, createBlob, createBounds, createCursor } from './particles';\nimport Renderer from './Renderer';\nimport config from 'src/config';\n\nimport { artistName, artistNameTag, wrapper } from './style.module.scss';\n\nconst { b2AABB, b2_dynamicBody, b2BodyDef, b2MouseJointDef, b2Vec2, b2World } = liquidfun; \n\nclass QueryCallback {\n  constructor(point) {\n    this.point = point;\n    this.fixture = null;\n  }\n  \n  ReportFixture(fixture) {\n    var body = fixture.body;\n    if (body.GetType() === b2_dynamicBody) {\n      var inside = fixture.TestPoint(this.point);\n      if (inside) {\n        this.fixture = fixture;\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction resetWorld(world) {\n    if (world !== null) {\n        while (world.joints.length > 0) {\n          world.DestroyJoint(world.joints[0]);\n        }\n    \n        while (world.bodies.length > 0) {\n          world.DestroyBody(world.bodies[0]);\n        }\n    \n        while (world.particleSystems.length > 0) {\n          world.DestroyParticleSystem(world.particleSystems[0]);\n        }\n      }\n}\n\nconst handleMouseDown = (world, scale, groundBody, mouseJoint) => (evt) => {\n  const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n  const bb = new b2AABB();\n  const affordance = new b2Vec2(0.01, 0.01);\n  b2Vec2.Sub(bb.lowerBound, coords, affordance);\n  b2Vec2.Add(bb.upperBound, coords, affordance);\n\n  const queryCallback = new QueryCallback(coords);\n  world.QueryAABB(queryCallback, bb);\n  console.log(queryCallback);\n\n  if (queryCallback.fixture) {\n    const body = queryCallback.fixture.body;\n    var md = new b2MouseJointDef();\n    md.bodyA = groundBody;\n    md.bodyB = body;\n    md.target = coords;\n    md.maxForce = 100 * body.GetMass();\n    mouseJoint.current = world.CreateJoint(md);\n    body.SetAwake(true);\n  }\n}\n\nconst handleMouseMove = (world, scale, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n    mouseJoint.SetTarget(coords);\n  }\n}\n\nconst handleMouseUp = (world, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    world.DestroyJoint(mouseJoint.current);\n    mouseJoint.current = null;\n  }\n}\n\nexport default function BlobField({\n  height = window.innerHeight,\n  positionIterations = 3,\n  velocityIterations = 5,\n  gravity = 5,\n  initialScale = 35,\n  width = window.innerWidth,\n  particleRadius = 0.8\n}) {\n    const animationEl = useRef(null); \n    const wrapperEl = useRef(null); \n    const svgEl = useRef(null);\n    const [groupLocations, setGroupLocations] = useState([]);\n    const scale = Math.sqrt(width * height) / config.artists.length * initialScale / 60;\n\n    useEffect(() => {\n        const world = new b2World(new b2Vec2(0, gravity));\n        window.world = world;\n        resetWorld(world);\n        const gd = new b2BodyDef();\n        const groundBody = world.CreateBody(gd);\n\n        createBounds({ world, scale, width, height });\n        const particleSystem = createParticleSystem(world, particleRadius);\n        \n        const cursor = createCursor(world);\n        var md = new b2MouseJointDef();\n        md.bodyA = groundBody;\n        md.bodyB = cursor;\n        md.maxForce = 150 * cursor.GetMass();\n        const mouseJoint = world.CreateJoint(md);\n        cursor.SetAwake(true);\n        \n        const renderer = new Renderer(world, animationEl.current, { scale, radius: particleRadius });\n\n        let shouldRender = true;\n        let blobsToCreate = config.artists.length;\n        const render = () => {\n          if (!shouldRender) {\n            return;\n          }\n          if (blobsToCreate) {\n            createBlob({ particleSystem, width, scale});\n            blobsToCreate--;\n          }\n          world.Step(1.0 / 40.0, velocityIterations, positionIterations);\n          requestAnimationFrame(() => {\n            renderer.draw();\n            render();\n          });\n          setGroupLocations(renderer.getGroupLocations());\n        };\n        render();\n\n        //El.current.addEventListener('mousedown', handleMouseDown(world, scale, groundBody, mouseJoint));\n        wrapperEl.current.addEventListener('mousemove', handleMouseMove(world, scale, mouseJoint));\n        //window.addEventListener('mouseup', handleMouseUp(world, mouseJoint));\n\n        return () => { shouldRender = false; }\n\n    }, []);\n\n    return (\n        <div className={wrapper} ref={wrapperEl} style={{ width, height }}>\n          <canvas ref={animationEl} width={width} height={height} />\n          <svg ref={svgEl} width={width} height={height}>\n            <defs>\n              <radialGradient id=\"cursorGradient\">\n                <stop offset=\"0%\" stopColor=\"#00ff3399\" />\n                <stop offset=\"100%\" stopColor=\"#00ff3300\" />\n              </radialGradient>\n            </defs>\n            {groupLocations.map(({ initialPoint }, i) => (\n              <g key={`artist-${i}`}>\n                <rect className={artistNameTag} x={initialPoint[0]} y={initialPoint[1]} width={120} height={20}></rect>\n                <text className={artistName} x={initialPoint[0]} y={initialPoint[1] + 16} width={120}>\n                    {config.artists[i] && config.artists[i].name.toUpperCase()}\n                </text>\n              </g>\n             ))}\n          </svg>\n        </div>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport BlobField from 'src/BlobField';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BlobField />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}