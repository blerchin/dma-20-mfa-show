{"version":3,"sources":["BlobField/style.module.scss","BlobField/particles.js","BlobField/Renderer.js","config.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","getCenterParticles","p","xSum","ySum","i","length","getClosestParticleToPosition","gp","x","y","minDist","closest","x2","y2","a","b","dist","Math","sqrt","getOuterParticles","center","radius","outerParticles","ang","PI","cos","sin","push","Renderer","world","canvasEl","scale","this","ctx","getContext","groupLocations","fillStyle","fillRect","width","height","max","particleSystems","drawParticleSystem","particles","groupIndex","smooth","points","map","beginPath","lineWidth","strokeStyle","moveTo","lineTo","closePath","stroke","cursor","position","GetPosition","arc","fixtures","shape","fill","system","GetPositionBuffer","particleGroups","j","start","GetBufferIndex","end","GetParticleCount","groupParticles","slice","groupCenter","centerPoint","initialPoint","upsertPath","artists","name","b2AABB","b2MouseJointDef","b2World","BlobField","positionIterations","velocityIterations","particleRadius","animationEl","useRef","wrapperEl","svgEl","useState","setGroupLocations","useEffect","window","joints","DestroyJoint","bodies","DestroyBody","DestroyParticleSystem","resetWorld","gd","groundBody","CreateBody","bd","ground","w","h","shape1","vertices","CreateFixtureFromShape","shape2","shape3","shape4","createBounds","particleSystem","psd","CreateParticleSystem","createParticleSystem","initialPosition","circle","type","body","Set","createCursor","md","bodyA","bodyB","maxForce","GetMass","mouseJoint","CreateJoint","SetAwake","renderer","current","shouldRender","blobsToCreate","config","render","pgd","flags","groupFlags","color","random","CreateParticleGroup","createBlob","Step","requestAnimationFrame","draw","getGroupLocations","addEventListener","evt","coords","offsetX","offsetY","SetTarget","handleMouseMove","className","wrapper","ref","style","id","offset","stopColor","key","artistNameTag","artistName","toUpperCase","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa92bc75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"artistName\":\"style_artistName__3T0Oq\",\"artistNameTag\":\"style_artistNameTag__1TD4C\",\"blob\":\"style_blob__1cFrO\",\"cursor\":\"style_cursor__1z_IY\",\"wrapper\":\"style_wrapper__2_6lD\"};","\nconst { \n    b2BodyDef,\n    b2CircleShape,\n    b2ParticleGroupDef,\n    b2ParticleSystemDef,\n    b2PolygonShape,\n    b2Vec2,\n    b2_springParticle,\n    b2_solidParticleGroup,\n    b2_dynamicBody\n} = liquidfun;\n\n\nexport function createBounds({ world, width=800, height=600, scale=10}) {\n    var bd = new b2BodyDef();\n    var ground = world.CreateBody(bd);\n\n    const w = width/scale;\n    const h = height/scale\n\n    //set boundary box\n    const shape1 = new b2PolygonShape();\n    shape1.vertices.push(new b2Vec2(0, -1));\n    shape1.vertices.push(new b2Vec2(w, -1));\n    shape1.vertices.push(new b2Vec2(w, 0));\n    shape1.vertices.push(new b2Vec2(0, 0));\n    ground.CreateFixtureFromShape(shape1, 0);\n  \n    const shape2 = new b2PolygonShape();\n    shape2.vertices.push(new b2Vec2(-1, -1));\n    shape2.vertices.push(new b2Vec2(0, -1));\n    shape2.vertices.push(new b2Vec2(0, h));\n    shape2.vertices.push(new b2Vec2(-1, h));\n    ground.CreateFixtureFromShape(shape2, 0);\n  \n    const shape3 = new b2PolygonShape();\n    shape3.vertices.push(new b2Vec2(w + 1, -1));\n    shape3.vertices.push(new b2Vec2(w + 1, h + 1));\n    shape3.vertices.push(new b2Vec2(w, h + 1));\n    shape3.vertices.push(new b2Vec2(w, -1));\n    ground.CreateFixtureFromShape(shape3, 0);\n    \n    const shape4 = new b2PolygonShape();\n    shape4.vertices.push(new b2Vec2(-1, h - 2));\n    shape4.vertices.push(new b2Vec2(w + 1, h - 2));\n    shape4.vertices.push(new b2Vec2(w, h - 1 ));\n    shape4.vertices.push(new b2Vec2(-1, h - 1));\n    ground.CreateFixtureFromShape(shape4, 0);\n}\n\nexport function createParticleSystem(world, radius = 0.3) {\n    const psd = new b2ParticleSystemDef();\n    psd.radius = radius;\n    return world.CreateParticleSystem(psd);\n};\n\nexport function createBlob({ particleSystem, radius = 3, width, scale = 10 }) {\n    const circle = new b2CircleShape();\n    circle.position.Set( width / scale / 2, radius);\n    circle.radius = radius;\n    const pgd = new b2ParticleGroupDef();\n    pgd.flags = b2_springParticle;\n    pgd.groupFlags = b2_solidParticleGroup;\n    pgd.shape = circle;\n    pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\n    particleSystem.CreateParticleGroup(pgd);\n}\n\nexport function createCursor(world, { initialPosition = [1, 1], radius = 1 } = {}) {\n    const bd = new b2BodyDef();\n    const circle = new b2CircleShape();\n    bd.type = b2_dynamicBody;\n    const body = world.CreateBody(bd);\n    circle.position.Set(...initialPosition);\n    circle.radius = radius;\n    body.CreateFixtureFromShape(circle, 3);\n    return body;\n}","import { blob, cursor as cursorClass } from './style.module.scss';\n\nfunction getCenterParticles(p) {\n  var xSum = 0;\n  var ySum = 0;\n\n  for(var i = 0; i < p.length; i += 2) {\n    xSum += p[i];\n    ySum += p[i+1];\n  }\n\n  return [xSum/(p.length/2), ySum/(p.length/2)];\n}\n\nfunction getClosestParticleToPosition(gp, x, y) {\n    var minDist = -1;\n    var closest = [0,0];\n\n    for(var i = 0; i < gp.length; i+=2) {\n      var x2 = gp[i];\n      var y2 = gp[i+1];\n      var a = x - x2;\n      var b = y - y2;\n      var dist = Math.sqrt(a*a + b*b);\n\n      if(minDist === -1 || dist < minDist) {\n        minDist = dist;\n        closest = [x2,y2]\n      }\n    }\n\n    return closest;\n}\n\nfunction getOuterParticles(gp, center, radius) {\n  const outerParticles = [];\n  var numOuterParticles = 20;\n\n  for(var i = 0; i < numOuterParticles; i++) {\n    var ang = (i / numOuterParticles) * (Math.PI * 2);\n    var x = Math.cos(ang) * radius + center[0];\n    var y = Math.sin(ang) * radius + center[1];\n\n    outerParticles.push(getClosestParticleToPosition(gp, x, y));\n  }\n\n  return outerParticles;\n}\n\nfunction line(pointA, pointB) {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nfunction controlPoint (current, previous, next, reverse, smoothing = 0.1) {\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n  // Properties of the opposed-line\n  const o = line(p, n)\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[1] + Math.sin(angle) * length\n  return [x, y]\n}\n\nexport default class Renderer {\n  constructor(world, canvasEl, { scale = 10} = {}) {\n      // init large buffer geometry\n      this.world = world;\n      this.canvasEl = canvasEl;\n      this.ctx = canvasEl.getContext('2d');\n      this.scale = scale;\n      this.groupLocations = []\n  }\n\n  draw() {\n    this.ctx.fillStyle = '#389e6b';\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n\n    // draw particle systems\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\n        this.drawParticleSystem(this.world.particleSystems[i]);\n    }\n  }\n\n  getGroupLocations() {\n    return this.groupLocations;\n  }\n\n\n  upsertPath(particles, groupIndex, smooth = false) {\n    const points = particles.map((p) => [p[0] * this.scale, p[1] * this.scale]);\n    this.ctx.beginPath();\n    this.lineWidth = '1';\n    this.strokeStyle = 'black';\n    this.ctx.fillStyle = ''\n    this.ctx.moveTo(points[0][0], points[0][1]);\n    for(var i = 1; i < particles.length; i++) {\n      if (smooth) {\n        //const startCP = controlPoint(points[i - 1], points[i - 2], points[i]);\n        //const endCP = controlPoint(points[i], points[i - 1],  points[i + 1], true);\n        //path += `C ${startCP[0]},${startCP[1]} ${endCP[0]}, ${endCP[1]}, ${points[i][0]} ${points[i][1]}`;\n      } else {\n        this.ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n    this.ctx.closePath();\n    this.ctx.stroke();\n  }\n\n  drawCursor(cursor) {\n    const position = cursor.GetPosition();\n    this.ctx.arc(\n      position.x * this.scale,\n      position.y * this.scale,\n      cursor.fixtures[0].shape.radius * this.scale,\n      2 * Math.PI,\n      false\n      );\n    this.ctx.fillStyle = '#00ff3399';\n    this.ctx.fill();\n  }\n\n  drawParticleSystem(system) {\n    const particles = system.GetPositionBuffer();\n    const particleGroups = system.particleGroups;\n    //need to reset this on each step so React knows to rerender\n    this.groupLocations = [];\n\n    // loop through particle groups \n    // calculate center of group\n    // get list of outmost particles from center of group \n    // draw a line connecting them\n    \n    for(var j = 0; j < particleGroups.length; j++) {\n      var bufferIndex = particleGroups[j].GetBufferIndex();\n      var numParticles = particleGroups[j].GetParticleCount();\n\n      // * 2 to account for x and y values in position buffer\n      var start = bufferIndex * 2;\n      var end = start + numParticles * 2;\n      var groupParticles = particles.slice(start, end);\n\n      var groupCenter = getCenterParticles(groupParticles);\n\n      var outerParticles = getOuterParticles(groupParticles, groupCenter, 5);\n\n      this.groupLocations[j] = { \n        centerPoint: [groupCenter[0] * this.scale, groupCenter[1] * this.scale], \n        initialPoint: [groupParticles[0] * this.scale, groupParticles[1] * this.scale]\n      };\n\n      this.upsertPath(outerParticles, j);\n    }\n  }\n}\n","export default {\n    artists: [\n        {\n            name: 'Zeynep Abes'\n        }, {\n            name: 'Graham Akins'\n        }, {\n            name: 'Berfin Ataman'\n        }, {\n            name: 'Erin Cooney'\n        }, {\n            name: 'Clara Leivas'\n        }, {\n            name: 'Ben Lerchin'\n        }, {\n            name: \"Blaine O'Neill\"\n        }, {\n            name: 'Miles Peyton'\n        }, {\n            name: 'Hirad Sab'\n        }, {\n            name: 'Dalena Tran'\n        }, {\n            name: 'Leming Z/C'\n        }\n        \n    ]\n}","import React, { useRef, useState, useEffect } from 'react';\nimport { createParticleSystem, createBlob, createBounds, createCursor } from './particles';\nimport Renderer from './Renderer';\nimport config from 'src/config';\n\nimport { artistName, artistNameTag, wrapper } from './style.module.scss';\n\nconst { b2AABB, b2_dynamicBody, b2BodyDef, b2MouseJointDef, b2Vec2, b2World } = liquidfun; \n\nclass QueryCallback {\n  constructor(point) {\n    this.point = point;\n    this.fixture = null;\n  }\n  \n  ReportFixture(fixture) {\n    var body = fixture.body;\n    if (body.GetType() === b2_dynamicBody) {\n      var inside = fixture.TestPoint(this.point);\n      if (inside) {\n        this.fixture = fixture;\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction resetWorld(world) {\n    if (world !== null) {\n        while (world.joints.length > 0) {\n          world.DestroyJoint(world.joints[0]);\n        }\n    \n        while (world.bodies.length > 0) {\n          world.DestroyBody(world.bodies[0]);\n        }\n    \n        while (world.particleSystems.length > 0) {\n          world.DestroyParticleSystem(world.particleSystems[0]);\n        }\n      }\n}\n\nconst handleMouseDown = (world, scale, groundBody, mouseJoint) => (evt) => {\n  const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n  const bb = new b2AABB();\n  const affordance = new b2Vec2(0.01, 0.01);\n  b2Vec2.Sub(bb.lowerBound, coords, affordance);\n  b2Vec2.Add(bb.upperBound, coords, affordance);\n\n  const queryCallback = new QueryCallback(coords);\n  world.QueryAABB(queryCallback, bb);\n  console.log(queryCallback);\n\n  if (queryCallback.fixture) {\n    const body = queryCallback.fixture.body;\n    var md = new b2MouseJointDef();\n    md.bodyA = groundBody;\n    md.bodyB = body;\n    md.target = coords;\n    md.maxForce = 100 * body.GetMass();\n    mouseJoint.current = world.CreateJoint(md);\n    body.SetAwake(true);\n  }\n}\n\nconst handleMouseMove = (world, scale, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n    mouseJoint.SetTarget(coords);\n  }\n}\n\nconst handleMouseUp = (world, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    world.DestroyJoint(mouseJoint.current);\n    mouseJoint.current = null;\n  }\n}\n\nexport default function BlobField({\n  height = 600,\n  positionIterations = 1,\n  velocityIterations = 2,\n  scale = 35,\n  width = 800,\n  particleRadius = 0.3\n}) {\n    const animationEl = useRef(null); \n    const wrapperEl = useRef(null); \n    const svgEl = useRef(null);\n    const [groupLocations, setGroupLocations] = useState([]);\n\n    useEffect(() => {\n        const world = new b2World(new b2Vec2(0, 5));\n        window.world = world;\n        resetWorld(world);\n        const gd = new b2BodyDef();\n        const groundBody = world.CreateBody(gd);\n\n        createBounds({ world, scale, width, height });\n        const particleSystem = createParticleSystem(world, particleRadius);\n        \n        const cursor = createCursor(world);\n        var md = new b2MouseJointDef();\n        md.bodyA = groundBody;\n        md.bodyB = cursor;\n        md.maxForce = 150 * cursor.GetMass();\n        const mouseJoint = world.CreateJoint(md);\n        cursor.SetAwake(true);\n        \n        const renderer = new Renderer(world, animationEl.current, { scale });\n\n        let shouldRender = true;\n        let blobsToCreate = config.artists.length;\n        const render = () => {\n          if (!shouldRender) {\n            return;\n          }\n          if (blobsToCreate) {\n            createBlob({ particleSystem, width, scale});\n            blobsToCreate--;\n          }\n          world.Step(1.0 / 40.0, velocityIterations, positionIterations);\n          requestAnimationFrame(() => {\n            renderer.draw();\n              //renderer.drawCursor(cursor);\n              render();\n          });\n          setGroupLocations(renderer.getGroupLocations());\n        };\n        render();\n\n        //El.current.addEventListener('mousedown', handleMouseDown(world, scale, groundBody, mouseJoint));\n        wrapperEl.current.addEventListener('mousemove', handleMouseMove(world, scale, mouseJoint));\n        //window.addEventListener('mouseup', handleMouseUp(world, mouseJoint));\n\n        return () => { shouldRender = false; }\n\n    }, [scale, height, width,]);\n\n    return (\n        <div className={wrapper} ref={wrapperEl} style={{ width, height }}>\n          <canvas ref={animationEl} width={width} height={height} />\n          <svg ref={svgEl} width={width} height={height}>\n            <defs>\n              <radialGradient id=\"cursorGradient\">\n                <stop offset=\"0%\" stopColor=\"#00ff3399\" />\n                <stop offset=\"100%\" stopColor=\"#00ff3300\" />\n              </radialGradient>\n            </defs>\n            {groupLocations.map(({ initialPoint }, i) => (\n              <g key={`artist-${i}`}>\n                <rect className={artistNameTag} x={initialPoint[0]} y={initialPoint[1]} width={120} height={20}></rect>\n                <text className={artistName} x={initialPoint[0]} y={initialPoint[1] + 16} width={120}>\n                    {config.artists[i] && config.artists[i].name.toUpperCase()}\n                </text>\n              </g>\n             ))}\n          </svg>\n        </div>\n    )\n\n}","import React from 'react';\nimport './App.css';\nimport BlobField from 'src/BlobField';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <BlobField />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}