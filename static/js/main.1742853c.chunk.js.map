{"version":3,"sources":["BlobField/style.module.scss","BlobField/particles.js","config.js","BlobField/textPath.js","BlobField/convex_hull.js","BlobField/Renderer.js","BlobField/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","b2BodyDef","liquidfun","b2CircleShape","b2ParticleGroupDef","b2MouseJointDef","b2ParticleSystemDef","b2PolygonShape","b2Vec2","b2_staticBody","b2Rot","b2_springParticle","b2_solidParticleGroup","b2_dynamicBody","b2_kinematicBody","moveBounds","bounds","width","height","scale","bottom","right","left","w","top","h","SetTransform","createBox","world","bd","type","gravityScale","body","CreateBody","shape","vertices","forEach","v","push","CreateFixtureFromShape","artists","name","style","background","blobFill","blobStroke","blobFont","blobTextFill","createPointText","str","text","PointText","content","font","fontFamily","fontSize","fontWieght","fontWeight","ConvexHull","points","this","newPoints","slice","sort","POINT_COMPARATOR","makeHullPresorted","length","upperHull","i","p","q","r","x","y","pop","lowerHull","concat","a","b","getCenterParticles","xSum","ySum","getOuterParticles","gp","makeHull","map","Renderer","canvasEl","radius","paper","setup","ctx","getContext","blobs","config","path","Path","glyphs","fillStyle","fillRect","max","particleSystems","drawParticleSystem","view","draw","groupLocations","blob","drawPoints","strokeColor","fillColor","lineWidth","closed","segments","smooth","factor","beginPath","arc","Math","PI","fill","textPath","clone","glyphTexts","g","remove","substring","justification","xOffsets","pairText","centerOffs","undefined","pathPoint","getPointAt","point","baselineShift","translate","tan","getTangentAt","rotate","angle","createAlignedText","moveTo","lineTo","bodies","j","fixtures","transform","GetTransform","drawPolygon","system","particles","GetPositionBuffer","particleGroups","start","GetBufferIndex","end","GetParticleCount","groupParticles","groupCenter","outerParticles","centerPoint","initialPoint","drawPath","drawName","b2AABB","b2World","BlobField","window","innerHeight","positionIterations","velocityIterations","gravity","initialScale","innerWidth","particleRadius","animationEl","useRef","wrapperEl","useState","useEffect","joints","DestroyJoint","DestroyBody","DestroyParticleSystem","resetWorld","gd","groundBody","current","horz","vert","createBounds","particleSystem","psd","CreateParticleSystem","createParticleSystem","cursor","initialPosition","circle","position","Set","createCursor","md","bodyA","bodyB","maxForce","GetMass","mouseJoint","CreateJoint","SetAwake","renderer","shouldRender","blobSize","console","log","_","pgd","flags","groupFlags","color","random","CreateParticleGroup","createBlob","floor","render","Step","requestAnimationFrame","addEventListener","evt","coords","offsetX","offsetY","SetTarget","handleMouseMove","className","wrapper","ref","resize","App","backgroundColor","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1742853c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"artistName\":\"style_artistName__3T0Oq\",\"artistNameTag\":\"style_artistNameTag__1TD4C\",\"blob\":\"style_blob__1cFrO\",\"cursor\":\"style_cursor__1z_IY\",\"wrapper\":\"style_wrapper__2_6lD\"};","\nconst { \n    b2BodyDef,\n    b2CircleShape,\n    b2MouseJointDef,\n    b2ParticleGroupDef,\n    b2ParticleSystemDef,\n    b2PolygonShape,\n    b2Vec2,\n    b2Rot,\n    b2_staticBody,\n    b2_springParticle,\n    b2_solidParticleGroup,\n    b2_kinematicBody,\n    b2_dynamicBody\n} = liquidfun;\n\nfunction createJoint(world, body) {\n    const gd = new b2BodyDef();\n    const ground = world.CreateBody(gd);\n    const jd = new b2MouseJointDef();\n    jd.bodyA = ground;\n    jd.bodyB = body;\n    //jd.maxForce = 200 * body.getMass();\n    body.SetAwake(true);\n    return world.CreateJoint(jd);\n}\n\nexport function moveBounds({ bounds, width, height, scale }) {\n    const { bottom, left, right, top } = bounds;\n    const w = width/scale;\n    const h = height/scale\n    \n\n    //bottom.SetTarget(new b2Vec2(0, h));\n    //right.SetTarget(new b2Vec2(w, 0));\n    bottom.SetTransform(new b2Vec2(0, h + 1), 0);\n    right.SetTransform(new b2Vec2(w + 1, 0), 0);\n\n}\n\nfunction createBox(world, ...vertices) {\n    const bd = new b2BodyDef();\n    bd.type = b2_staticBody;\n    bd.gravityScale = 0;\n    const body = world.CreateBody(bd);\n    const shape = new b2PolygonShape();\n    vertices.forEach((v) => {\n        shape.vertices.push(v);\n    })\n    body.CreateFixtureFromShape(shape, 1000);\n    return body;\n}\n\n\nexport function createBounds({ world, width=800, height=600, scale=10}) {\n    var bd = new b2BodyDef();\n    var ground = world.CreateBody(bd);\n\n    const w = width/scale;\n    const h = height/scale\n    const max = 10000 / scale;\n\n    // set boundary box\n    // h/v vertices are initially the same and will be translated by #moveBounds\n    const horz = [new b2Vec2(0, -1), new b2Vec2(max, -1), new b2Vec2(max, 0), new b2Vec2(0, 0)];\n    const top = createBox(world, ...horz);\n    const bottom = createBox(world, ...horz);\n    \n    const vert = [new b2Vec2(-1, -1), new b2Vec2(-1, max), new b2Vec2(0, max), new b2Vec2(0, -1)];\n    const left = createBox(world, ...vert);\n    const right = createBox(world, ...vert);\n     \n    return { \n        bottom,\n        left,\n        right,\n        top\n     };\n}\n\nexport function createParticleSystem(world, radius = 0.3) {\n    const psd = new b2ParticleSystemDef();\n    psd.radius = radius;\n    return world.CreateParticleSystem(psd);\n};\n\nexport function createBlob({ particleSystem, radius = 3, x, y, width, scale = 10 }) {\n    const circle = new b2CircleShape();\n    circle.position.Set(radius + x / scale, radius + y / scale);\n    circle.radius = radius;\n    const pgd = new b2ParticleGroupDef();\n    pgd.flags = b2_springParticle;\n    pgd.groupFlags = b2_solidParticleGroup;\n    pgd.shape = circle;\n    pgd.color.Set(Math.random()*255, Math.random()*255, Math.random()*255, 255);\n    particleSystem.CreateParticleGroup(pgd);\n}\n\nexport function createCursor(world, { initialPosition = [1, 1], radius = 1 } = {}) {\n    const bd = new b2BodyDef();\n    const circle = new b2CircleShape();\n    bd.type = b2_dynamicBody;\n    bd.gravityScale = 0;\n    const body = world.CreateBody(bd);\n    circle.position.Set(...initialPosition);\n    circle.radius = radius;\n    body.CreateFixtureFromShape(circle, 3);\n    return body;\n}","export default {\n    artists: [\n        {\n            name: 'Zeynep Abes'\n        }, {\n            name: 'Graham Akins'\n        }, {\n            name: 'Berfin Ataman'\n        }, {\n            name: 'Erin Cooney'\n        }, {\n            name: 'Clara Leivas'\n        }, {\n            name: 'Ben Lerchin'\n        }, {\n            name: \"Blaine O'Neill\"\n        }, {\n            name: 'Miles Peyton'\n        }, {\n            name: 'Hirad Sab'\n        }, {\n            name: 'Dalena Tran'\n        }, {\n            name: 'Leming Z/C'\n        }\n        \n    ],\n    style: {\n        background: 'rgb(171,202,204)',\n        blobFill: 'rgb(185,205,210)',\n        blobStroke: 'rgb(255,255,255)',\n        blobFont: '24px Helvetica Neue',\n        blobTextFill: 'rgb(255,255,255)'\n    }\n}","import { PointText } from 'paper';\n\nexport function createAlignedText(str, path, glyphTexts, style = {}) {\n    if (str && str.length > 0 && path) {\n        // create PointText object for each glyph\n        glyphTexts.forEach((g) => g.remove());\n        for (var i = 0; i < str.length; i++) {\n            glyphTexts[i] = createPointText(str.substring(i, i+1), style);\n            glyphTexts[i].justification = \"center\";\n        }\n        // for each glyph find center xOffset\n        var xOffsets = [0];\n        for (var i = 1; i < str.length; i++) {\n            var pairText = createPointText(str.substring(i - 1, i + 1), style);\n            pairText.remove();\n            xOffsets[i] = xOffsets[i - 1] + pairText.bounds.width - \n                glyphTexts[i - 1].bounds.width / 2 - glyphTexts[i].bounds.width / 2;\n        }\n        // set point for each glyph and rotate glyph aorund the point\n        for (var i = 0; i < str.length; i++) {\n            var centerOffs = xOffsets[i];\n            if (path.length < centerOffs) {\n                if (path.closed) {\n                    centerOffs = centerOffs % path.length;\n                }  else {\n                    centerOffs = undefined;\n                }\n            }\n            if (centerOffs === undefined) {\n                glyphTexts[i].remove();\n            } else {\n                var pathPoint = path.getPointAt(centerOffs);\n                glyphTexts[i].point = pathPoint;\n                if (style.baselineShift) {\n                    glyphTexts[i].translate(0, style.baselineShift);\n                }\n                var tan = path.getTangentAt(centerOffs); \n                glyphTexts[i].rotate(tan.angle, pathPoint);\n            }\n        }\n    }\n}\n\n// create a PointText object for a string and a style\nvar createPointText = function(str, style) {\n    var text = new PointText();\n    text.content = str;\n    if (style) {\n        if (style.font) text.font = style.font;\n        if (style.fontFamily) text.fontFamily = style.fontFamily;\n        if (style.fontSize) text.fontSize = style.fontSize;\n        if (style.fontWieght) text.fontWeight = style.fontWeight;\n    }\n    return text;\n}\n\n\n","/* \n * Convex hull algorithm - Library (JavaScript)\n * \n * Copyright (c) 2018 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\nexport default class ConvexHull {\n\n    constructor(points) {\n        this.points = points;\n    }\n\t\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\n\tmakeHull() {\n\t\tvar newPoints = this.points.slice();\n\t\tnewPoints.sort(this.POINT_COMPARATOR);\n\t\treturn this.makeHullPresorted(newPoints);\n\t};\n\t\n\t\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\tmakeHullPresorted(points) {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tvar upperHull = [];\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tvar p = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tvar q = upperHull[upperHull.length - 1];\n\t\t\t\tvar r = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tvar lowerHull = [];\n\t\tfor (var i = points.length - 1; i >= 0; i--) {\n\t\t\tvar p = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tvar q = lowerHull[lowerHull.length - 1];\n\t\t\t\tvar r = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t};\n\t\n\t\n\tPOINT_COMPARATOR(a, b) {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t};\n\t\n};","import config from 'src/config';\nimport { createAlignedText } from './textPath';\nimport ConvexHull from './convex_hull';\nimport paper from 'paper';\nconst { b2PolygonShape } = liquidfun;\n\nfunction getCenterParticles(p) {\n  var xSum = 0;\n  var ySum = 0;\n\n  for(var i = 0; i < p.length; i += 2) {\n    xSum += p[i];\n    ySum += p[i+1];\n  }\n\n  return [xSum/(p.length/2), ySum/(p.length/2)];\n}\n\nfunction getOuterParticles(gp, scale) {\n  var points = [];\n  for(var i = 0; i < gp.length - 1; i+= 2) {\n    points.push({ x: gp[i] * scale, y: gp[i+1] * scale });\n  }\n\n  const ch = new ConvexHull(points);\n  return ch.makeHull().map((p) => [p.x, p.y]);\n}\n\nfunction line(pointA, pointB) {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[1] - pointA[1]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nfunction controlPoint (current, previous, next, reverse, smoothing = 0.12) {\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n  // Properties of the opposed-line\n  const o = line(p, n)\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[1] + Math.sin(angle) * length\n  return [x, y]\n}\n\nexport default class Renderer {\n  constructor(world, canvasEl, { radius = .25, scale = 10} = {}) {\n      // init large buffer geometry\n      this.world = world;\n      this.canvasEl = canvasEl;\n      paper.setup(canvasEl);\n      this.ctx = canvasEl.getContext('2d');\n      this.radius = radius;\n      this.blobs = config.artists.map(({ name }) => ({ name, path: new paper.Path(), glyphs: [] }));\n  }\n\n  draw(scale) {\n    this.ctx.fillStyle = config.style.background;\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\n\n    // draw particle systems\n    for (let i = 0, max = this.world.particleSystems.length; i < max; i++) {\n        this.drawParticleSystem(this.world.particleSystems[i], scale);\n    }\n    paper.view.draw();\n  }\n\n  getGroupLocations() {\n    return this.groupLocations;\n  }\n\n\n  drawPath(points, blob, smooth = true, drawPoints = false) {\n    const { path } = blob;\n    path.strokeColor = config.style.blobStroke;\n    path.fillColor = config.style.blobFill;\n    path.lineWidth = 0.8;\n    path.closed = true;\n    path.segments = [];\n    path.segments = points.map((p) => [p, null, null])\n    path.smooth({ type: 'catmull-rom', factor: 0.6 });\n\n    if (drawPoints) {\n      for(var i = 0; i < points.length; i++) {\n        this.ctx.fillStyle='black';\n        this.ctx.beginPath();\n        this.ctx.arc(points[i][0], points[i][1], 3, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n    }\n  }\n\n  drawName({ name, path, glyphs }) {\n    const textPath = path.clone();\n    textPath.scale(.8);\n    textPath.smooth({ type: 'catmull-rom', factor: 1 });\n    createAlignedText(name, textPath, glyphs, { fontSize: '20px', baselineShift: 0 });\n    textPath.remove();\n  }\n\n  drawPolygon(vertices, scale) {\n    const ctx = this.ctx;\n    ctx.fillStyle='black';\n    ctx.beginPath();\n    ctx.moveTo(vertices[0].x * scale, vertices[0].y * scale);\n    for (let i = 1; i < vertices.length; i++) {\n      ctx.lineTo(vertices[i].x * scale, vertices[i].y * scale);\n    }\n    ctx.fill();\n  }\n\n  drawBounds(world, scale) {\n    for (let i = 0; i < world.bodies.length; i++) {\n      const body = world.bodies[i];\n      for (var j = 0; j < body.fixtures.length; j++) {\n        if (body.fixtures[j].shape instanceof b2PolygonShape ) {\n          const transform = body.GetTransform().p;\n          const vertices = body.fixtures[j].shape.vertices.map((v) => ({ x: v.x + transform.x, y: v.y + transform.y }));\n          this.drawPolygon(vertices, scale);\n        }\n      }\n    }\n  }\n\n  drawParticleSystem(system, scale) {\n    const particles = system.GetPositionBuffer();\n    const particleGroups = system.particleGroups;\n    //need to reset this on each step so React knows to rerender\n    this.groupLocations = [];\n\n    // loop through particle groups\n    // calculate center of group\n    // get list of outmost particles from center of group\n    // draw a line connecting them\n\n    for(var j = 0; j < particleGroups.length; j++) {\n      var bufferIndex = particleGroups[j].GetBufferIndex();\n      var numParticles = particleGroups[j].GetParticleCount();\n\n      // * 2 to account for x and y values in position buffer\n      var start = bufferIndex * 2;\n      var end = start + numParticles * 2;\n      var groupParticles = particles.slice(start, end);\n\n      var groupCenter = getCenterParticles(groupParticles);\n\n      var outerParticles = getOuterParticles(groupParticles, scale);\n\n      this.groupLocations[j] = {\n        centerPoint: [groupCenter[0] * scale, groupCenter[1] * scale],\n        initialPoint: [groupParticles[0] * scale, groupParticles[1] * scale]\n      };\n\n      this.drawPath(outerParticles, this.blobs[j]);\n      this.drawName(this.blobs[j]);\n    }\n  }\n}\n","import React, { useRef, useState, useEffect } from 'react';\nimport { createParticleSystem, createBlob, createBounds, createCursor, moveBounds } from './particles';\nimport Renderer from './Renderer';\nimport config from 'src/config';\n\nimport { artistName, artistNameTag, wrapper } from './style.module.scss';\n\nconst { b2AABB, b2_dynamicBody, b2BodyDef, b2MouseJointDef, b2Vec2, b2World } = liquidfun;\n\nclass QueryCallback {\n  constructor(point) {\n    this.point = point;\n    this.fixture = null;\n  }\n\n  ReportFixture(fixture) {\n    var body = fixture.body;\n    if (body.GetType() === b2_dynamicBody) {\n      var inside = fixture.TestPoint(this.point);\n      if (inside) {\n        this.fixture = fixture;\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction resetWorld(world) {\n    if (world !== null) {\n        while (world.joints.length > 0) {\n          world.DestroyJoint(world.joints[0]);\n        }\n\n        while (world.bodies.length > 0) {\n          world.DestroyBody(world.bodies[0]);\n        }\n\n        while (world.particleSystems.length > 0) {\n          world.DestroyParticleSystem(world.particleSystems[0]);\n        }\n      }\n}\n\nconst handleMouseDown = (world, scale, groundBody, mouseJoint) => (evt) => {\n  const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n  const bb = new b2AABB();\n  const affordance = new b2Vec2(0.01, 0.01);\n  b2Vec2.Sub(bb.lowerBound, coords, affordance);\n  b2Vec2.Add(bb.upperBound, coords, affordance);\n\n  const queryCallback = new QueryCallback(coords);\n  world.QueryAABB(queryCallback, bb);\n  console.log(queryCallback);\n\n  if (queryCallback.fixture) {\n    const body = queryCallback.fixture.body;\n    var md = new b2MouseJointDef();\n    md.bodyA = groundBody;\n    md.bodyB = body;\n    md.target = coords;\n    md.maxForce = 100 * body.GetMass();\n    mouseJoint.current = world.CreateJoint(md);\n    body.SetAwake(true);\n  }\n}\n\nconst handleMouseMove = (world, scale, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    const coords = new b2Vec2(evt.offsetX / scale, evt.offsetY / scale);\n    mouseJoint.SetTarget(coords);\n  }\n}\n\nconst handleMouseUp = (world, mouseJoint) => (evt) => {\n  if (mouseJoint) {\n    world.DestroyJoint(mouseJoint.current);\n    mouseJoint.current = null;\n  }\n}\n\nexport default function BlobField({\n  height = window.innerHeight,\n  positionIterations = 3,\n  velocityIterations = 5,\n  gravity = 5,\n  initialScale = 50,\n  width = window.innerWidth,\n  particleRadius = 0.25\n}) {\n    const animationEl = useRef(null);\n    const wrapperEl = useRef(null);\n    const svgEl = useRef(null);\n    const bounds = useRef(null);\n    const [groupLocations, setGroupLocations] = useState([]);\n    //const getScale = () => Math.sqrt(width * height) / config.artists.length * initialScale / 70;\n    const getScale = () => 50;\n\n    useEffect(() => {\n        const world = new b2World(new b2Vec2(gravity, 0));\n        window.world = world;\n        resetWorld(world);\n        const gd = new b2BodyDef();\n        const groundBody = world.CreateBody(gd);\n        const scale = getScale();\n\n        bounds.current = createBounds({ world, scale, width, height });\n        moveBounds({ bounds: bounds.current, width, height, scale });\n        const particleSystem = createParticleSystem(world, particleRadius);\n\n        const cursor = createCursor(world);\n        var md = new b2MouseJointDef();\n        md.bodyA = groundBody;\n        md.bodyB = cursor;\n        md.maxForce = 150 * cursor.GetMass();\n        const mouseJoint = world.CreateJoint(md);\n        cursor.SetAwake(true);\n\n        const renderer = new Renderer(world, animationEl.current, { scale, radius: particleRadius });\n\n        let shouldRender = true;\n\n        var spawnRowLen = 5;\n        var spawnColLen = 2\n        var col = 0;\n\n        //Use height and magic number to scale blobs\n        var blobSize = height / 350;\n        console.log(blobSize);\n\n        config.artists.forEach((_, i) =>\n          createBlob({\n            particleSystem,\n            x: (((i % spawnRowLen) / spawnRowLen) * (width*.8)),\n            y:  (Math.floor(i / spawnRowLen) * (height*.8)/(spawnColLen+1)),\n            radius: blobSize,\n            width,\n            scale\n          }));\n        const render = () => {\n          if (!shouldRender) {\n            return;\n          }\n          world.Step(1.0 / 30.0, velocityIterations, positionIterations);\n          requestAnimationFrame(() => {\n            renderer.draw(getScale());\n            render();\n          });\n          //setGroupLocations(renderer.getGroupLocations());\n        };\n        render();\n\n        //El.current.addEventListener('mousedown', handleMouseDown(world, scale, groundBody, mouseJoint));\n        wrapperEl.current.addEventListener('mousemove', handleMouseMove(world, getScale(), mouseJoint));\n        //window.addEventListener('mouseup', handleMouseUp(world, mouseJoint));\n\n        return () => { shouldRender = false; }\n\n    }, []);\n\n    useEffect(() => {\n      bounds.current && moveBounds({ bounds: bounds.current, width, height, scale: getScale() });\n\n    }, [width, height]);\n\n    return (\n        <div className={wrapper} ref={wrapperEl} style={{ width, height }}>\n          <canvas ref={animationEl} width={width} height={height} resize />\n        </div>\n    )\n\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport BlobField from 'src/BlobField';\nimport config from './config';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: config.style.background }}>\n      <header className=\"App-header\">\n        <BlobField />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}